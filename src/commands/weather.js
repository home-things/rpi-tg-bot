module.exports = ({ utils: { exec, say }, config: { weather } }) => ({
  forecast: {
    wait: '10 sec, please‚Ä¶ üòÖ',
    fn: async (ctx) => {
      const res = await exec(`get-weather`);
      const weather = await JSON.parse(res);

      const temp = Math.floor(weather.temp);
      const units = inflect(temp, { one: '–≥—Ä–∞–¥—É—Å', some: '–≥—Ä–∞–¥—É—Å–∞', many: '–≥—Ä–∞–¥—É—Å–æ–≤' });
      const txt = weather.description && weather.temp && `–ü–æ–≥–æ–¥–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è: ${weather.description}, ${temp} ${units}`;
      ctx.reply(txt || '–Ω–∏—à–º–∞–≥–ª–∞');

      //weather.icon && app.telegram.sendPhoto(ctx.chat.id, `http://openweathermap.org/img/w/${ weather.icon }.png`, {disable_notification: true});
      //const url = `http://tg-bot-web.invntrm.ru/weathericons/${ weather.icon }.svg`;
      //weather.icon && app.telegram.sendPhoto(ctx.chat.id, url, {disable_notification: true});

      if ((new Date()).getHours() >= 9) say(txt, ctx, true, true);
    },
    phrases: [
      '–ø–æ–≥–æ–¥–∞', '—á—Ç–æ —Å –ø–æ–≥–æ–¥–æ–π', '—á—Ç–æ —Ç–∞–º —Å –ø–æ–≥–æ–¥–æ–π', '–ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã', '–±—É–¥–µ—Ç –¥–æ–∂–¥—å', '–±—É–¥–µ—Ç –ª–∏ –¥–æ–∂–¥—å',
      '—á—Ç–æ –æ–±–µ—â–∞—é—Ç',
      'weather', 'get weather', 'weather forecast', 'forecast',
    ],
    command: 'weath'
  },
});